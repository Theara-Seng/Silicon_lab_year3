C51 COMPILER V9.60.0.0   INTERRUPT_MAIN                                                    06/03/2021 10:01:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INTERRUPT_MAIN
OBJECT MODULE PLACED IN .\src\Interrupt_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe D:\year4-semeste
                    -r2\Silicon_lab_year3\Interrupt\src\Interrupt_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(
                    -3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\year4-semester2\Silicon_lab_year3\Interrupt\
                    -inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStu
                    -dio/v5/developer/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src\Interrupt_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65
                    -) OBJECT(.\src\Interrupt_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupt_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          #include "delay.h"
  15          // $[Generated Includes]
  16          // [Generated Includes]$
  17          sbit led=P1^3;
  18          sbit led1=P1^4;
  19          unsigned int i =0;
  20          //-----------------------------------------------------------------------------
  21          // SiLabs_Startup() Routine
  22          // ----------------------------------------------------------------------------
  23          // This function is called immediately after reset, before the initialization
  24          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  25          // useful place to disable the watchdog timer, which is enable by default
  26          // and may trigger before main() in some instances.
  27          //-----------------------------------------------------------------------------
  28          void
  29          SiLabs_Startup (void)
  30          {
  31   1        // $[SiLabs Startup]
  32   1        // [SiLabs Startup]$
  33   1        WDTCN = 0XDE;
  34   1        WDTCN = 0XAD;
  35   1      }
  36          SI_INTERRUPT(INT0_ISR, INT0_IRQn){
  37   1      
  38   1        led=~led;
  39   1        for(i=0;i<=10;i++){
  40   2      
  41   2        }
  42   1        TCON_IE0=0;
  43   1      }
  44          //-----------------------------------------------------------------------------
  45          // main() Routine
  46          // ----------------------------------------------------------------------------
  47          int
  48          main (void)
  49          {
  50   1        // Call hardware initialization routine
  51   1        enter_DefaultMode_from_RESET ();
C51 COMPILER V9.60.0.0   INTERRUPT_MAIN                                                    06/03/2021 10:01:42 PAGE 2   

  52   1        XBR2 |= XBR2_XBARE__ENABLED;
  53   1        IE_EA=1;
  54   1        IE_EX0=1;
  55   1        IT01CF=IT01CF_IN0PL__ACTIVE_LOW | IT01CF_IN0SL__P0_0;
  56   1        P1MDOUT |=P1MDOUT_B3__PUSH_PULL;
  57   1        P1MDOUT |=P1MDOUT_B4__PUSH_PULL;
  58   1        while (1)
  59   1          {
  60   2            led1=0;
  61   2            delay_ms(1000);
  62   2            led1=1;
  63   2            delay_ms(1000);
  64   2      // $[Generated Run-time code]
  65   2      // [Generated Run-time code]$
  66   2          }
  67   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     98    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.0.0   TIMER_MAIN                                                        04/07/2021 23:45:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER_MAIN
OBJECT MODULE PLACED IN .\src/Timer_main.OBJ
COMPILER INVOKED BY: Z:\home\tadashi\Downloads\SimplicityStudio_v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe /home
                    -/tadashi/SimplicityStudio/v5_workspace/Timer/src/Timer_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) F
                    -LOATFUZZY(3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/tadashi/SimplicityStudio/v5_wor
                    -kspace/Timer/inc;/home/tadashi/Downloads/SimplicityStudio_v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;/home/
                    -tadashi/Downloads/SimplicityStudio_v5/developer/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src/Timer_main.lst) COND P
                    -AGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/Timer_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/Timer_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          sbit led=P1^3;
  17          sbit led1=P1^5;
  18          
  19          uint8_t i=0;
  20          //-----------------------------------------------------------------------------
  21          // SiLabs_Startup() Routine
  22          // ----------------------------------------------------------------------------
  23          // This function is called immediately after reset, before the initialization
  24          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  25          // useful place to disable the watchdog timer, which is enable by default
  26          // and may trigger before main() in some instances.
  27          //-----------------------------------------------------------------------------
  28          
  29          void
  30          SiLabs_Startup (void)
  31          {
  32   1        // $[SiLabs Startup]
  33   1        // [SiLabs Startup]$
  34   1        WDTCN = 0xDE;
  35   1        WDTCN = 0xAD;
  36   1      }
  37          SI_INTERRUPT(TIMER0_ISR,TIMER0_IRQn){
  38   1      TH0=0X06;
  39   1        TL0=0XC5;
  40   1        led=~led;
  41   1      
  42   1      }
  43          void system_clock(){
  44   1        CLKSEL=CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC0;
  45   1      
  46   1      }
  47          void cross_bar_enable(){
  48   1       XBR2 |= XBR2_XBARE__ENABLED;
  49   1      //  XBR2_XBARE=1;
  50   1        XBR0 |= XBR0_URT0E__ENABLED;
  51   1      
C51 COMPILER V9.60.0.0   TIMER_MAIN                                                        04/07/2021 23:45:19 PAGE 2   

  52   1      }
  53          void Uart_timer(){
  54   1        CKCON0 = CKCON0_T1M__SYSCLK;
  55   1        TMOD =TMOD_T1M__MODE2;
  56   1       // TL1=0X96;
  57   1        TH1=0X96;
  58   1        TCON_TR1=1;
  59   1      
  60   1      }
  61          
  62          void put_char(char c)
  63          {
  64   1        SBUF0 = c; // write character to buffer
  65   1        while (!SCON0_TI); // wait for Tx to be complete
  66   1        SCON0_TI = 0; // clear Tx flag
  67   1      }
  68          void put_string(char* str)
  69          {
  70   1        // send character until null-termination is found
  71   1        while (*str != '\x0')
  72   1        {
  73   2          put_char(*(str++));
  74   2        }
  75   1      }
  76          void timer_delay(){
  77   1        CKCON0 =CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE ;
  78   1        TMOD = TMOD_T0M__MODE1;
  79   1        TH0=0X06;
  80   1        TL0=0XC5;
  81   1        IE_ET0 = 1;
  82   1        TCON_TR0 = 1;
  83   1      
  84   1      }
  85          //-----------------------------------------------------------------------------
  86          // main() Routine
  87          // ----------------------------------------------------------------------------
  88          int
  89          main (void)
  90          {
  91   1        // Call hardware initialization routine
  92   1       // enter_DefaultMode_from_RESET ();
  93   1        system_clock();
  94   1        cross_bar_enable();
  95   1        timer_delay();
  96   1        Uart_timer();
  97   1        IE =IE_EA__ENABLED | IE_ET0__ENABLED;
  98   1       // IE_EA = 1;
  99   1        P1MDOUT |=P1MDOUT_B3__PUSH_PULL;
 100   1        P1MDOUT |=P1MDOUT_B5__PUSH_PULL;
 101   1        P0MDOUT |= P0MDOUT_B4__PUSH_PULL;
 102   1      
 103   1        while (1)
 104   1          {
 105   2            put_string("hello world\n");
 106   2      // $[Generated Run-time code]
 107   2      // [Generated Run-time code]$
 108   2          }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    149    ----
   CONSTANT SIZE    =     13    ----
C51 COMPILER V9.60.0.0   TIMER_MAIN                                                        04/07/2021 23:45:19 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

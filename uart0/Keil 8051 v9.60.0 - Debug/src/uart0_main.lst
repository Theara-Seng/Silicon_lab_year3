C51 COMPILER V9.60.0.0   UART0_MAIN                                                        05/13/2021 11:00:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART0_MAIN
OBJECT MODULE PLACED IN .\src\uart0_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe D:\year4-semeste
                    -r2\Silicon_lab_year3\uart0\src\uart0_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIM
                    -IZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\year4-semester2\Silicon_lab_year3\uart0\inc;C:/Silic
                    -onLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/devel
                    -oper/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src\uart0_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\u
                    -art0_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/uart0_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          #include "STDIO.H"
  15          #include "stdint.h"
  16          #include "serial.h"
  17          // $[Generated Includes]
  18          // [Generated Includes]$
  19          char r;
  20          sbit led=P1^3;
  21          //-----------------------------------------------------------------------------
  22          // SiLabs_Startup() Routine
  23          // ----------------------------------------------------------------------------
  24          // This function is called immediately after reset, before the initialization
  25          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  26          // useful place to disable the watchdog timer, which is enable by default
  27          // and may trigger before main() in some instances.
  28          //-----------------------------------------------------------------------------
  29          void
  30          SiLabs_Startup (void)
  31          {
  32   1        // $[SiLabs Startup]
  33   1        // [SiLabs Startup]$
  34   1        WDTCN=0XDE;
  35   1        WDTCN=0XAD;
  36   1      }
  37          void enable_crossbar(){
  38   1        XBR2 |= XBR2_XBARE__ENABLED;
  39   1        XBR0 |= XBR0_URT0E__ENABLED;
  40   1      
  41   1        P0MDOUT = P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__PUSH_PULL;
  42   1        P1MDOUT |=P1MDOUT_B3__PUSH_PULL;
  43   1      }
  44          
  45          //-----------------------------------------------------------------------------
  46          // main() Routine
  47          // ----------------------------------------------------------------------------
  48          int
  49          main (void)
  50          {
  51   1        // Call hardware initialization routine
C51 COMPILER V9.60.0.0   UART0_MAIN                                                        05/13/2021 11:00:02 PAGE 2   

  52   1       // enter_DefaultMode_from_RESET ();
  53   1        CLKSEL= CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC0; //24.5MHz
  54   1        CKCON0 |= CKCON0_T1M__SYSCLK;
  55   1        TMOD |= TMOD_T1M__MODE2;
  56   1        enable_crossbar();
  57   1        uart_timer();
  58   1        while (1)
  59   1          {
  60   2             r=receive_char();
  61   2             if (r=='1'){
  62   3                 led=0;
  63   3             }
  64   2             else if (r=='0'){
  65   3                 led=1;
  66   3             }
  67   2      
  68   2      // $[Generated Run-time code]
  69   2      // [Generated Run-time code]$
  70   2          }
  71   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     59    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

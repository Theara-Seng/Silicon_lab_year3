//=========================================================
// src/uart_main.c: generated by Hardware Configurator
//
// This file will be updated when saving a document.
// leave the sections inside the "$[...]" comment tags alone
// or they will be overwritten!!
//=========================================================

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
#include "InitDevice.h"
// $[Generated Includes]
// [Generated Includes]$

//-----------------------------------------------------------------------------
// SiLabs_Startup() Routine
// ----------------------------------------------------------------------------
// This function is called immediately after reset, before the initialization
// code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
// useful place to disable the watchdog timer, which is enable by default
// and may trigger before main() in some instances.
//-----------------------------------------------------------------------------
void
SiLabs_Startup (void)
{
  // $[SiLabs Startup]
  // [SiLabs Startup]$
}
void clock_set(){
  CLKSEL =CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC0;

}
void set_uart_timer1_mode2(){
  CKCON0 = CKCON0_T1M__SYSCLK;
   TMOD =TMOD_T1M__MODE2;
   TL1=0X96;
   TH1=0X96;
   TCON_TR1=1;
}

void set_uart_timer0_mode2(){
  CKCON0 =CKCON0_T0M__SYSCLK;
  TMOD =TMOD_T0M__MODE1;
  TH0=0XFF;
  TL0=0X96;
  TCON_TR0=1;
}
void put_char(char c)
{
  SBUF0 = c; // write character to buffer
  while (!SCON0_TI); // wait for Tx to be complete
  SCON0_TI = 0; // clear Tx flag
}
void put_string(char* str)
{
  // send character until null-termination is found
  while (*str != '\x0')
  {
    put_char(*(str++));
  }
}
//-----------------------------------------------------------------------------
// main() Routine
// ----------------------------------------------------------------------------
int
main (void)
{
  // Call hardware initialization routine
  //enter_DefaultMode_from_RESET ();
  XBR2 |=XBR2_XBARE__ENABLED;
  XBR0 |=XBR0_URT0E__ENABLED;

  P0MDOUT |=P0MDOUT_B4__PUSH_PULL;
  clock_set();
 // set_uart_timer();
 set_uart_timer0_mode2();
  while (1)
    {
      put_string("hello world\n");
// $[Generated Run-time code]
// [Generated Run-time code]$
    }
}

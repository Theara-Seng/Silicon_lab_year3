//=========================================================
// src/Servo_motor_main.c: generated by Hardware Configurator
//
// This file will be updated when saving a document.
// leave the sections inside the "$[...]" comment tags alone
// or they will be overwritten!!
//=========================================================

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
#include "InitDevice.h"
// $[Generated Includes]
// [Generated Includes]$
uint8_t servo=0;
//-----------------------------------------------------------------------------
// SiLabs_Startup() Routine
// ----------------------------------------------------------------------------
// This function is called immediately after reset, before the initialization
// code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
// useful place to disable the watchdog timer, which is enable by default
// and may trigger before main() in some instances.
//-----------------------------------------------------------------------------
void
SiLabs_Startup (void)
{
  // $[SiLabs Startup]
  // [SiLabs Startup]$
  WDTCN = 0xDE;
  WDTCN = 0xAD;
}
void XBAR_Init()
{
  /* set up crossbar */
  XBR2 |= XBR2_XBARE__ENABLED; // enable crossbar
  // skip P0.0 - P0.3, P0.6 - P0.7, P1.0 - P1.2
  P0SKIP = 0xCF; // 0b1100 1111
  P1SKIP = 0x07; // 0b0000 0111
  // enable output compare CEX0 and UART0
  XBR0 |= XBR0_URT0E__ENABLED;
  XBR1 |= XBR1_PCA0ME__CEX0_TO_CEX1;

  // set up UART0 TX pin (P0.4) as push-pull
  P0MDOUT |= P0MDOUT_B4__PUSH_PULL;

  // set up P1.3 as push-pull
  P1MDOUT |= P1MDOUT_B3__PUSH_PULL;
  P1MDOUT |= P1MDOUT_B4__PUSH_PULL;
}

void PWM_Init()
{
  /* setup 8-bit PWM on CEX0 */
//  PCA0CPM0 |= PCA0CPM0_PWM16__16_BIT;
  PCA0CPM0 |=PCA0CPM0_PWM__ENABLED;
  PCA0CPM1 |=PCA0CPM1_PWM__ENABLED;
  // write pwm to autoreload register

  PCA0CPH0 = 0;
  PCA0CPH1= 0;
  // start PCA
  PCA0CN0 = PCA0CN0_CR__RUN;
}

//-----------------------------------------------------------------------------
// main() Routine
// ----------------------------------------------------------------------------
int
main (void)
{
  // Call hardware initialization routine
  //enter_DefaultMode_from_RESET ();
  CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_32 | CLKSEL_CLKSL__HFOSC0;
    PCA0MD |=PCA0MD_CPS__SYSCLK_DIV_12;
   //PCA0CPM0= PCA0CPM0_ECOM__ENABLED ;
   XBAR_Init();
   PWM_Init();
  while (1)
    {

      servo=100; //2.45ms
      PCA0CPH0=servo;
      PCA0CPH1=servo+50;
// $[Generated Run-time code]
// [Generated Run-time code]$
    }
}

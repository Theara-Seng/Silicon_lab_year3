C51 COMPILER V9.60.0.0   UART_MAIN                                                         04/09/2021 00:19:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART_MAIN
OBJECT MODULE PLACED IN .\src/uart_main.OBJ
COMPILER INVOKED BY: Z:\home\tadashi\Downloads\SimplicityStudio_v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe /home
                    -/tadashi/SimplicityStudio/v5_workspace/uart/src/uart_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLO
                    -ATFUZZY(3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/tadashi/SimplicityStudio/v5_works
                    -pace/uart/inc;/home/tadashi/Downloads/SimplicityStudio_v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;/home/tad
                    -ashi/Downloads/SimplicityStudio_v5/developer/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src/uart_main.lst) COND PAGEW
                    -IDTH(120) PAGELENGTH(65) OBJECT(.\src/uart_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/uart_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          unsigned char receive_data;
  17          unsigned char receiving;
  18          sbit led=P1^3;
  19          unsigned long i =0;
  20          //char data;
  21          //-----------------------------------------------------------------------------
  22          // SiLabs_Startup() Routine
  23          // ----------------------------------------------------------------------------
  24          // This function is called immediately after reset, before the initialization
  25          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  26          // useful place to disable the watchdog timer, which is enable by default
  27          // and may trigger before main() in some instances.
  28          //-----------------------------------------------------------------------------
  29          void
  30          SiLabs_Startup (void)
  31          {
  32   1        // $[SiLabs Startup]
  33   1        // [SiLabs Startup]$
  34   1      }
  35          void clock_set(){
  36   1        CLKSEL =CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC0;
  37   1      
  38   1      }
  39          void UART0_transmit(){
  40   1        CKCON0 = CKCON0_T1M__SYSCLK;
  41   1         TMOD =TMOD_T1M__MODE2;
  42   1         TL1=0X96;
  43   1         TH1=0X96;
  44   1         TCON_TR1=1;
  45   1      }
  46          
  47          
  48          
  49          void transmit_char(unsigned char c)
  50          {
  51   1        SBUF0 = c; // write character to buffer
C51 COMPILER V9.60.0.0   UART_MAIN                                                         04/09/2021 00:19:01 PAGE 2   

  52   1        while (!SCON0_TI); // wait for Tx to be complete
  53   1        SCON0_TI = 0; // clear Tx flag
  54   1      
  55   1      }
  56          void transmit_string(char* str)
  57          {
  58   1        // send character until null-termination is found
  59   1        while (*str != '\0')
  60   1        {
  61   2          transmit_char(*(str++));
  62   2        }
  63   1      }
  64          //-----------------------------------------------------------------------------
  65          // main() Routine
  66          // ----------------------------------------------------------------------------
  67          unsigned char receive_char()
  68          {
  69   1        SCON0|=SCON0_REN__RECEIVE_ENABLED;
  70   1        while (SCON0_RI==0); // wait for Tx to be complete
  71   1        receive_data=SBUF0; // write character to buffer
  72   1        SCON0_RI = 0; // clear Tx flag
  73   1        return receive_data;
  74   1      }
  75          /*unsigned char receive_string(char* str)
  76          {
  77            // send character until null-termination is found
  78            while (*str != '\0')
  79            {
  80              recieve_char(*(str++));
  81            }
  82          }*/
  83          int
  84          main (void)
  85          {
  86   1        // Call hardware initialization routine
  87   1        //enter_DefaultMode_from_RESET ();
  88   1        XBR2 |=XBR2_XBARE__ENABLED;
  89   1        XBR0 |=XBR0_URT0E__ENABLED;
  90   1        P0MDOUT |=P0MDOUT_B5__PUSH_PULL;
  91   1        P0MDOUT |=P0MDOUT_B4__PUSH_PULL;
  92   1        P1MDOUT |=P1MDOUT_B3__PUSH_PULL;
  93   1        clock_set();
  94   1       // set_uart_timer();
  95   1        UART0_transmit();
  96   1      
  97   1      
  98   1        while (1)
  99   1          {
 100   2            receiving=receive_char();
 101   2                    if (receiving=='H'){
 102   3                        led=~led;
 103   3                        for (i=0;i<=10000000;i++ ){
 104   4      
 105   4                        }
 106   3                    }else{
 107   3                        led=1;
 108   3                    }
 109   2          //  transmit_string("Hello world \n");
 110   2      // $[Generated Run-time code]
 111   2      // [Generated Run-time code]$
 112   2          }
 113   1      }

C51 COMPILER V9.60.0.0   UART_MAIN                                                         04/09/2021 00:19:01 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    196    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

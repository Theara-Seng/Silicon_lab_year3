C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/12/2021 21:03:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe D:\year4-semeste
                    -r2\Silicon_lab_year3\SMBUS\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIM
                    -IZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\year4-semester2\Silicon_lab_year3\SMBUS\inc;C:/Silic
                    -onLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/devel
                    -oper/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\I
                    -nitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  30   1        ADC_0_enter_DefaultMode_from_RESET ();
  31   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  33   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  34   1        SMBUS_0_enter_DefaultMode_from_RESET ();
  35   1        // Restore the SFRPAGE
  36   1        SFRPAGE = SFRPAGE_save;
  37   1        // [Config Calls]$
  38   1      
  39   1      }
  40          
  41          extern void
  42          WDT_0_enter_DefaultMode_from_RESET (void)
  43          {
  44   1        // $[Watchdog Timer Init Variable Declarations]
  45   1        uint32_t i;
  46   1        bool ea;
  47   1        // [Watchdog Timer Init Variable Declarations]$
  48   1      
  49   1        // $[WDTCN - Watchdog Timer Control]
  50   1        // Deprecated
  51   1        // [WDTCN - Watchdog Timer Control]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/12/2021 21:03:51 PAGE 2   

  52   1      
  53   1        // $[WDTCN_2 - Watchdog Timer Control]
  54   1        SFRPAGE = 0x00;
  55   1      
  56   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  57   1        WDTCN = 0xA5;
  58   1      
  59   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  60   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  61   1          {
  62   2            NOP ();
  63   2          }
  64   1      
  65   1        // Disable WDT
  66   1        ea = IE_EA;
  67   1        IE_EA = 0;
  68   1        WDTCN = 0xDE;
  69   1        WDTCN = 0xAD;
  70   1        IE_EA = ea;
  71   1      
  72   1        // [WDTCN_2 - Watchdog Timer Control]$
  73   1      
  74   1      }
  75          
  76          extern void
  77          PBCFG_0_enter_DefaultMode_from_RESET (void)
  78          {
  79   1        // $[XBR2 - Port I/O Crossbar 2]
  80   1        /***********************************************************************
  81   1         - Weak Pullups enabled 
  82   1         - Crossbar enabled
  83   1         - UART1 I/O unavailable at Port pin
  84   1         - UART1 RTS1 unavailable at Port pin
  85   1         - UART1 CTS1 unavailable at Port pin
  86   1         ***********************************************************************/
  87   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
  88   1            | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
  89   1            | XBR2_URT1CTSE__DISABLED;
  90   1        // [XBR2 - Port I/O Crossbar 2]$
  91   1      
  92   1        // $[PRTDRV - Port Drive Strength]
  93   1        // [PRTDRV - Port Drive Strength]$
  94   1      
  95   1        // $[XBR0 - Port I/O Crossbar 0]
  96   1        /***********************************************************************
  97   1         - UART0 I/O unavailable at Port pin
  98   1         - SPI I/O unavailable at Port pins
  99   1         - SMBus 0 I/O routed to Port pins
 100   1         - CP0 unavailable at Port pin
 101   1         - Asynchronous CP0 unavailable at Port pin
 102   1         - CP1 unavailable at Port pin
 103   1         - Asynchronous CP1 unavailable at Port pin
 104   1         - SYSCLK unavailable at Port pin
 105   1         ***********************************************************************/
 106   1        XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 107   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 108   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 109   1        // [XBR0 - Port I/O Crossbar 0]$
 110   1      
 111   1        // $[XBR1 - Port I/O Crossbar 1]
 112   1        // [XBR1 - Port I/O Crossbar 1]$
 113   1      
 114   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/12/2021 21:03:51 PAGE 3   

 115          
 116          extern void
 117          CLOCK_0_enter_DefaultMode_from_RESET (void)
 118          {
 119   1        // $[HFOSC1 Setup]
 120   1        // [HFOSC1 Setup]$
 121   1      
 122   1        // $[CLKSEL - Clock Select]
 123   1        /***********************************************************************
 124   1         - Clock derived from the Internal High Frequency Oscillator 0
 125   1         - SYSCLK is equal to selected clock source divided by 1
 126   1         ***********************************************************************/
 127   1        CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 128   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 129   1          ;
 130   1        // [CLKSEL - Clock Select]$
 131   1      
 132   1      }
 133          
 134          extern void
 135          SMBUS_0_enter_DefaultMode_from_RESET (void)
 136          {
 137   1        // $[SMB0FCN0 - SMBus0 FIFO Control 0]
 138   1        // [SMB0FCN0 - SMBus0 FIFO Control 0]$
 139   1      
 140   1        // $[SMB0RXLN - SMBus0 Receive Length Counter]
 141   1        // [SMB0RXLN - SMBus0 Receive Length Counter]$
 142   1      
 143   1        // $[SMB0ADR - SMBus 0 Slave Address]
 144   1        // [SMB0ADR - SMBus 0 Slave Address]$
 145   1      
 146   1        // $[SMB0ADM - SMBus 0 Slave Address Mask]
 147   1        // [SMB0ADM - SMBus 0 Slave Address Mask]$
 148   1      
 149   1        // $[SMB0TC - SMBus 0 Timing and Pin Control]
 150   1        // [SMB0TC - SMBus 0 Timing and Pin Control]$
 151   1      
 152   1        // $[SMB0CF - SMBus 0 Configuration]
 153   1        /***********************************************************************
 154   1         - Enable the SMBus module
 155   1         ***********************************************************************/
 156   1        SMB0CF |= SMB0CF_ENSMB__ENABLED;
 157   1        // [SMB0CF - SMBus 0 Configuration]$
 158   1      
 159   1      }
 160          
 161          extern void
 162          ADC_0_enter_DefaultMode_from_RESET (void)
 163          {
 164   1        // $[ADC0CN2 - ADC0 Control 2]
 165   1        // [ADC0CN2 - ADC0 Control 2]$
 166   1      
 167   1        // $[ADC0CN1 - ADC0 Control 1]
 168   1        // [ADC0CN1 - ADC0 Control 1]$
 169   1      
 170   1        // $[ADC0MX - ADC0 Multiplexer Selection]
 171   1        // [ADC0MX - ADC0 Multiplexer Selection]$
 172   1      
 173   1        // $[ADC0CF2 - ADC0 Power Control]
 174   1        // [ADC0CF2 - ADC0 Power Control]$
 175   1      
 176   1        // $[ADC0CF0 - ADC0 Configuration]
 177   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/12/2021 21:03:51 PAGE 4   

 178   1         - ADCCLK = SYSCLK
 179   1         - SAR Clock Divider = 0x01
 180   1         ***********************************************************************/
 181   1        ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 182   1        // [ADC0CF0 - ADC0 Configuration]$
 183   1      
 184   1        // $[ADC0CF1 - ADC0 Configuration]
 185   1        /***********************************************************************
 186   1         - Disable low power mode
 187   1         - Conversion Tracking Time = 0x03
 188   1         ***********************************************************************/
 189   1        ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x03 << ADC0CF1_ADTK__SHIFT);
 190   1        // [ADC0CF1 - ADC0 Configuration]$
 191   1      
 192   1        // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 193   1        // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 194   1      
 195   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 196   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 197   1      
 198   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 199   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 200   1      
 201   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
 202   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 203   1      
 204   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 205   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 206   1      
 207   1        // $[ADC0ASCF - ADC0 Autoscan Configuration]
 208   1        // [ADC0ASCF - ADC0 Autoscan Configuration]$
 209   1      
 210   1        // $[ADC0CN0 - ADC0 Control 0]
 211   1        // [ADC0CN0 - ADC0 Control 0]$
 212   1      
 213   1      }
 214          
 215          extern void
 216          TIMER01_0_enter_DefaultMode_from_RESET (void)
 217          {
 218   1        // $[Timer Initialization]
 219   1        //Save Timer Configuration
 220   1        uint8_t TCON_save;
 221   1        TCON_save = TCON;
 222   1        //Stop Timers
 223   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 224   1      
 225   1        // [Timer Initialization]$
 226   1      
 227   1        // $[TH0 - Timer 0 High Byte]
 228   1        /***********************************************************************
 229   1         - Timer 0 High Byte = 0xF9
 230   1         ***********************************************************************/
 231   1        TH0 = (0xF9 << TH0_TH0__SHIFT);
 232   1        // [TH0 - Timer 0 High Byte]$
 233   1      
 234   1        // $[TL0 - Timer 0 Low Byte]
 235   1        // [TL0 - Timer 0 Low Byte]$
 236   1      
 237   1        // $[TH1 - Timer 1 High Byte]
 238   1        // [TH1 - Timer 1 High Byte]$
 239   1      
 240   1        // $[TL1 - Timer 1 Low Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/12/2021 21:03:51 PAGE 5   

 241   1        // [TL1 - Timer 1 Low Byte]$
 242   1      
 243   1        // $[Timer Restoration]
 244   1        //Restore Timer Configuration
 245   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 246   1      
 247   1        // [Timer Restoration]$
 248   1      
 249   1      }
 250          
 251          extern void
 252          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 253          {
 254   1        // $[CKCON0 - Clock Control 0]
 255   1        // [CKCON0 - Clock Control 0]$
 256   1      
 257   1        // $[CKCON1 - Clock Control 1]
 258   1        // [CKCON1 - Clock Control 1]$
 259   1      
 260   1        // $[TMOD - Timer 0/1 Mode]
 261   1        /***********************************************************************
 262   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 263   1         - Mode 0, 13-bit Counter/Timer
 264   1         - Timer Mode
 265   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 266   1         - Timer Mode
 267   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 268   1         ***********************************************************************/
 269   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 270   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 271   1        // [TMOD - Timer 0/1 Mode]$
 272   1      
 273   1        // $[TCON - Timer 0/1 Control]
 274   1        /***********************************************************************
 275   1         - Start Timer 0 running
 276   1         ***********************************************************************/
 277   1        TCON |= TCON_TR0__RUN;
 278   1        // [TCON - Timer 0/1 Control]$
 279   1      
 280   1      }
 281          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.0.0   SERVO_MOTOR_MAIN                                                  04/28/2021 22:37:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERVO_MOTOR_MAIN
OBJECT MODULE PLACED IN .\src\Servo_motor_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe D:\year4-semeste
                    -r2\Silicon_lab_year3\Servo_motor\src\Servo_motor_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\year4-semester2\Silicon_lab_year3\Servo_
                    -motor\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;C:/SiliconLabs/Simplic
                    -ityStudio/v5/developer/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src\Servo_motor_main.lst) COND PAGEWIDTH(120) PAGEL
                    -ENGTH(65) OBJECT(.\src\Servo_motor_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/Servo_motor_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          uint8_t servo=0;
  17          //-----------------------------------------------------------------------------
  18          // SiLabs_Startup() Routine
  19          // ----------------------------------------------------------------------------
  20          // This function is called immediately after reset, before the initialization
  21          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  22          // useful place to disable the watchdog timer, which is enable by default
  23          // and may trigger before main() in some instances.
  24          //-----------------------------------------------------------------------------
  25          void
  26          SiLabs_Startup (void)
  27          {
  28   1        // $[SiLabs Startup]
  29   1        // [SiLabs Startup]$
  30   1        WDTCN = 0xDE;
  31   1        WDTCN = 0xAD;
  32   1      }
  33          void XBAR_Init()
  34          {
  35   1        /* set up crossbar */
  36   1        XBR2 |= XBR2_XBARE__ENABLED; // enable crossbar
  37   1        // skip P0.0 - P0.3, P0.6 - P0.7, P1.0 - P1.2
  38   1        P0SKIP = 0xCF; // 0b1100 1111
  39   1        P1SKIP = 0x07; // 0b0000 0111
  40   1        // enable output compare CEX0 and UART0
  41   1        XBR0 |= XBR0_URT0E__ENABLED;
  42   1        XBR1 |= XBR1_PCA0ME__CEX0_TO_CEX1;
  43   1      
  44   1        // set up UART0 TX pin (P0.4) as push-pull
  45   1        P0MDOUT |= P0MDOUT_B4__PUSH_PULL;
  46   1      
  47   1        // set up P1.3 as push-pull
  48   1        P1MDOUT |= P1MDOUT_B3__PUSH_PULL;
  49   1        P1MDOUT |= P1MDOUT_B4__PUSH_PULL;
  50   1      }
  51          
C51 COMPILER V9.60.0.0   SERVO_MOTOR_MAIN                                                  04/28/2021 22:37:40 PAGE 2   

  52          void PWM_Init()
  53          {
  54   1        /* setup 8-bit PWM on CEX0 */
  55   1      //  PCA0CPM0 |= PCA0CPM0_PWM16__16_BIT;
  56   1      //  PCA0CPM0 |=PCA0CPM0_PWM__ENABLED;
  57   1      //  PCA0CPM1 |=PCA0CPM1_PWM__ENABLED;
  58   1        PCA0CPM0 |=PCA0CPM0_PWM__ENABLED;
  59   1        PCA0CPM0 |=PCA0CPM0_ECOM__ENABLED;
  60   1        //  PCA0CPM1 |=PCA0CPM1_PWM__ENABLED;
  61   1       // write pwm to autoreload register
  62   1        PCA0CPM0  |=PCA0CPM0_PWM16__16_BIT;
  63   1        // write pwm to autoreload register
  64   1        PCA0CPL0 =19;
  65   1        PCA0CPH0 = 232;
  66   1        PCA0CPH1= 250;
  67   1        // start PCA
  68   1        PCA0CN0 = PCA0CN0_CR__RUN;
  69   1      }
  70          
  71          //-----------------------------------------------------------------------------
  72          // main() Routine
  73          // ----------------------------------------------------------------------------
  74          int
  75          main (void)
  76          {
  77   1        // Call hardware initialization routine
  78   1        //enter_DefaultMode_from_RESET ();
  79   1        CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_8 | CLKSEL_CLKSL__HFOSC0;
  80   1          PCA0MD |=PCA0MD_CPS__SYSCLK;
  81   1         //PCA0CPM0= PCA0CPM0_ECOM__ENABLED ;
  82   1         XBAR_Init();
  83   1         PWM_Init();
  84   1        while (1)
  85   1          {
  86   2      
  87   2          //  servo=100; //2.45ms
  88   2         //   PCA0CPH0=servo;
  89   2         //   PCA0CPH1=servo+50;
  90   2      // $[Generated Run-time code]
  91   2      // [Generated Run-time code]$
  92   2          }
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

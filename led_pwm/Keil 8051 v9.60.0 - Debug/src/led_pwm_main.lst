C51 COMPILER V9.60.0.0   LED_PWM_MAIN                                                      05/11/2021 11:33:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED_PWM_MAIN
OBJECT MODULE PLACED IN .\src\led_pwm_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe D:\year4-semeste
                    -r2\Silicon_lab_year3\led_pwm\src\led_pwm_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) O
                    -PTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\year4-semester2\Silicon_lab_year3\led_pwm\inc;C:
                    -/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5
                    -/developer/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src\led_pwm_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT
                    -(.\src\led_pwm_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/led_pwm_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8LB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          
  17          //-----------------------------------------------------------------------------
  18          // SiLabs_Startup() Routine
  19          // ----------------------------------------------------------------------------
  20          // This function is called immediately after reset, before the initialization
  21          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  22          // useful place to disable the watchdog timer, which is enable by default
  23          // and may trigger before main() in some instances.
  24          //-----------------------------------------------------------------------------
  25          void
  26          SiLabs_Startup (void)
  27          {
  28   1        // $[SiLabs Startup]
  29   1        // [SiLabs Startup]$
  30   1        WDTCN = 0XDE;
  31   1        WDTCN = 0XAD;
  32   1      }
  33          void
  34          crossbar_init ()
  35          {
  36   1        XBR2 |= XBR2_XBARE__ENABLED;  //Enable pin
  37   1       // P0SKIP = 0XFF;  //0B11111111
  38   1       //P1SKIP = 0X07;     //0B00000111  P1.0 P1.1 P1.2
  39   1        XBR1 |= XBR1_PCA0ME__CEX0;    //Enable PCA  PORT 1 BIT 3
  40   1        XBR1 |= XBR1_PCA0ME__CEX0_TO_CEX1; //Enable PCA Port 1 Bit 4
  41   1      
  42   1        P0MDOUT |= P0MDOUT_B0__PUSH_PULL;
  43   1        P0MDOUT |= P0MDOUT_B1__PUSH_PULL;
  44   1      }
  45          void
  46          pwm ()
  47          {
  48   1        PCA0CPM0 |= PCA0CPM0_PWM__ENABLED;  // 8 bit resolution
  49   1        PCA0CPM1 |= PCA0CPM1_PWM__ENABLED;
  50   1        PCA0CPH0 = 150;   //duty cycle= (2^8 -128)/2^8)
  51   1        PCA0CPH1 = 140;    //duty cycle= (2^8-20)/2^8
C51 COMPILER V9.60.0.0   LED_PWM_MAIN                                                      05/11/2021 11:33:05 PAGE 2   

  52   1        PCA0CN0 = PCA0CN0_CR__RUN;
  53   1      }
  54          void pwm_10bit(){
  55   1        PCA0CPM0 = PCA0CPM0_PWM__ENABLED | PCA0CPM0_ECOM__ENABLED;
  56   1        PCA0PWM =  PCA0PWM_ARSEL__AUTORELOAD | PCA0PWM_CLSEL__10_BITS;  //10 Bit PWM mode
  57   1        PCA0CPL0= 0;  //0b00000000   2^8-> 0-256
  58   1        PCA0CPH0= 2;  //0b00000010   2^8=256    2^9=512
  59   1      
  60   1        PCA0CN0 = PCA0CN0_CR__RUN;
  61   1      
  62   1      
  63   1      }
  64          void pwm_16bit(){
  65   1        PCA0CPM0 = PCA0CPM0_PWM16__16_BIT | PCA0CPM0_ECOM__ENABLED | PCA0CPM0_PWM__ENABLED;
  66   1        PCA0CPL0 = 9;  //LOW byte 8 bit
  67   1        PCA0CPH0 = 244;  //High byte 8 bit
  68   1      
  69   1        PCA0CN0 = PCA0CN0_CR__RUN;
  70   1      }
  71          //-----------------------------------------------------------------------------
  72          // main() Routine
  73          // ----------------------------------------------------------------------------
  74          int
  75          main (void)
  76          {
  77   1        // Call hardware initialization routine
  78   1        //enter_DefaultMode_from_RESET ();
  79   1        CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_8 | CLKSEL_CLKSL__HFOSC0; // CLK=24.5Mhz divide by 8
  80   1        PCA0MD |= PCA0MD_CPS__SYSCLK; //Select PCA clock default mode from system clock 3.0625Mhz
  81   1        crossbar_init ();
  82   1        pwm ();
  83   1      
  84   1        while (1)
  85   1          {
  86   2      // $[Generated Run-time code]
  87   2      // [Generated Run-time code]$
  88   2          }
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     83    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/24/2021 18:03:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\home\tadashi\Downloads\SimplicityStudio_v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe /home
                    -/tadashi/SimplicityStudio/v5_workspace/myProject/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(
                    -2) FLOATFUZZY(3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/tadashi/SimplicityStudio/v5
                    -_workspace/myProject/inc;/home/tadashi/Downloads/SimplicityStudio_v5/developer/sdks/8051/v4.2.0//Device/shared/si8051Bas
                    -e;/home/tadashi/Downloads/SimplicityStudio_v5/developer/sdks/8051/v4.2.0//Device/EFM8LB1/inc) PRINT(.\src/InitDevice.lst
                    -) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PORTS_1_enter_DefaultMode_from_RESET ();
  30   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  31   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  32   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  33   1        // Restore the SFRPAGE
  34   1        SFRPAGE = SFRPAGE_save;
  35   1        // [Config Calls]$
  36   1      
  37   1      }
  38          
  39          extern void
  40          WDT_0_enter_DefaultMode_from_RESET (void)
  41          {
  42   1        // $[Watchdog Timer Init Variable Declarations]
  43   1        uint32_t i;
  44   1        bool ea;
  45   1        // [Watchdog Timer Init Variable Declarations]$
  46   1      
  47   1        // $[WDTCN - Watchdog Timer Control]
  48   1        // Deprecated
  49   1        // [WDTCN - Watchdog Timer Control]$
  50   1      
  51   1        // $[WDTCN_2 - Watchdog Timer Control]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/24/2021 18:03:03 PAGE 2   

  52   1        SFRPAGE = 0x00;
  53   1      
  54   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  55   1        WDTCN = 0xA5;
  56   1      
  57   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  58   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  59   1          {
  60   2            NOP ();
  61   2          }
  62   1      
  63   1        // Disable WDT
  64   1        ea = IE_EA;
  65   1        IE_EA = 0;
  66   1        WDTCN = 0xDE;
  67   1        WDTCN = 0xAD;
  68   1        IE_EA = ea;
  69   1      
  70   1        // [WDTCN_2 - Watchdog Timer Control]$
  71   1      
  72   1      }
  73          
  74          extern void
  75          PORTS_1_enter_DefaultMode_from_RESET (void)
  76          {
  77   1        // $[P1 - Port 1 Pin Latch]
  78   1        // [P1 - Port 1 Pin Latch]$
  79   1      
  80   1        // $[P1MDOUT - Port 1 Output Mode]
  81   1        /***********************************************************************
  82   1         - P1.0 output is push-pull
  83   1         - P1.1 output is open-drain
  84   1         - P1.2 output is open-drain
  85   1         - P1.3 output is push-pull
  86   1         - P1.4 output is open-drain
  87   1         - P1.5 output is open-drain
  88   1         - P1.6 output is open-drain
  89   1         - P1.7 output is open-drain
  90   1         ***********************************************************************/
  91   1        P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
  92   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__PUSH_PULL | P1MDOUT_B4__OPEN_DRAIN
  93   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
  94   1            | P1MDOUT_B7__OPEN_DRAIN;
  95   1        // [P1MDOUT - Port 1 Output Mode]$
  96   1      
  97   1        // $[P1MDIN - Port 1 Input Mode]
  98   1        // [P1MDIN - Port 1 Input Mode]$
  99   1      
 100   1        // $[P1SKIP - Port 1 Skip]
 101   1        // [P1SKIP - Port 1 Skip]$
 102   1      
 103   1        // $[P1MASK - Port 1 Mask]
 104   1        // [P1MASK - Port 1 Mask]$
 105   1      
 106   1        // $[P1MAT - Port 1 Match]
 107   1        // [P1MAT - Port 1 Match]$
 108   1      
 109   1      }
 110          
 111          extern void
 112          PBCFG_0_enter_DefaultMode_from_RESET (void)
 113          {
 114   1        // $[XBR2 - Port I/O Crossbar 2]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/24/2021 18:03:03 PAGE 3   

 115   1        /***********************************************************************
 116   1         - Weak Pullups enabled 
 117   1         - Crossbar enabled
 118   1         - UART1 I/O unavailable at Port pin
 119   1         - UART1 RTS1 unavailable at Port pin
 120   1         - UART1 CTS1 unavailable at Port pin
 121   1         ***********************************************************************/
 122   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 123   1            | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 124   1            | XBR2_URT1CTSE__DISABLED;
 125   1        // [XBR2 - Port I/O Crossbar 2]$
 126   1      
 127   1        // $[PRTDRV - Port Drive Strength]
 128   1        // [PRTDRV - Port Drive Strength]$
 129   1      
 130   1        // $[XBR0 - Port I/O Crossbar 0]
 131   1        // [XBR0 - Port I/O Crossbar 0]$
 132   1      
 133   1        // $[XBR1 - Port I/O Crossbar 1]
 134   1        // [XBR1 - Port I/O Crossbar 1]$
 135   1      
 136   1      }
 137          
 138          extern void
 139          TIMER16_2_enter_DefaultMode_from_RESET (void)
 140          {
 141   1        // $[Timer Initialization]
 142   1        // Save Timer Configuration
 143   1        uint8_t TMR2CN0_TR2_save;
 144   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 145   1        // Stop Timer
 146   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 147   1        // [Timer Initialization]$
 148   1      
 149   1        // $[TMR2CN1 - Timer 2 Control 1]
 150   1        // [TMR2CN1 - Timer 2 Control 1]$
 151   1      
 152   1        // $[TMR2CN0 - Timer 2 Control]
 153   1        // [TMR2CN0 - Timer 2 Control]$
 154   1      
 155   1        // $[TMR2H - Timer 2 High Byte]
 156   1        // [TMR2H - Timer 2 High Byte]$
 157   1      
 158   1        // $[TMR2L - Timer 2 Low Byte]
 159   1        // [TMR2L - Timer 2 Low Byte]$
 160   1      
 161   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 162   1        /***********************************************************************
 163   1         - Timer 2 Reload High Byte = 0x9C
 164   1         ***********************************************************************/
 165   1        TMR2RLH = (0x9C << TMR2RLH_TMR2RLH__SHIFT);
 166   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 167   1      
 168   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 169   1        /***********************************************************************
 170   1         - Timer 2 Reload Low Byte = 0x4F
 171   1         ***********************************************************************/
 172   1        TMR2RLL = (0x4F << TMR2RLL_TMR2RLL__SHIFT);
 173   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 174   1      
 175   1        // $[TMR2CN0]
 176   1        /***********************************************************************
 177   1         - Start Timer 2 running
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/24/2021 18:03:03 PAGE 4   

 178   1         ***********************************************************************/
 179   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 180   1        // [TMR2CN0]$
 181   1      
 182   1        // $[Timer Restoration]
 183   1        // Restore Timer Configuration
 184   1        TMR2CN0 |= TMR2CN0_TR2_save;
 185   1        // [Timer Restoration]$
 186   1      
 187   1      }
 188          
 189          extern void
 190          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 191          {
 192   1        // $[EIE1 - Extended Interrupt Enable 1]
 193   1        // [EIE1 - Extended Interrupt Enable 1]$
 194   1      
 195   1        // $[EIE2 - Extended Interrupt Enable 2]
 196   1        // [EIE2 - Extended Interrupt Enable 2]$
 197   1      
 198   1        // $[EIP1H - Extended Interrupt Priority 1 High]
 199   1        // [EIP1H - Extended Interrupt Priority 1 High]$
 200   1      
 201   1        // $[EIP1 - Extended Interrupt Priority 1 Low]
 202   1        // [EIP1 - Extended Interrupt Priority 1 Low]$
 203   1      
 204   1        // $[EIP2 - Extended Interrupt Priority 2]
 205   1        // [EIP2 - Extended Interrupt Priority 2]$
 206   1      
 207   1        // $[EIP2H - Extended Interrupt Priority 2 High]
 208   1        // [EIP2H - Extended Interrupt Priority 2 High]$
 209   1      
 210   1        // $[IE - Interrupt Enable]
 211   1        /***********************************************************************
 212   1         - Enable each interrupt according to its individual mask setting
 213   1         - Disable external interrupt 0
 214   1         - Disable external interrupt 1
 215   1         - Disable all SPI0 interrupts
 216   1         - Disable all Timer 0 interrupt
 217   1         - Disable all Timer 1 interrupt
 218   1         - Enable interrupt requests generated by the TF2L or TF2H flags
 219   1         - Disable UART0 interrupt
 220   1         ***********************************************************************/
 221   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 222   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 223   1            | IE_ES0__DISABLED;
 224   1        // [IE - Interrupt Enable]$
 225   1      
 226   1        // $[IP - Interrupt Priority]
 227   1        // [IP - Interrupt Priority]$
 228   1      
 229   1        // $[IPH - Interrupt Priority High]
 230   1        // [IPH - Interrupt Priority High]$
 231   1      
 232   1      }
 233          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    149    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/24/2021 18:03:03 PAGE 5   

   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
